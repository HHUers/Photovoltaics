# Generated by Django 3.2.4 on 2021-07-04 13:17

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='projectApplyForLog',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False, verbose_name='编号')),
                ('record', models.CharField(max_length=30, verbose_name='记录')),
            ],
            options={
                'verbose_name': '申请审核',
                'verbose_name_plural': '申请审核',
                'db_table': 'projectApplyFor_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='projectApplyFor',
            fields=[
                ('id', models.IntegerField()),
                ('projectName', models.CharField(max_length=100, primary_key=True, serialize=False, verbose_name='项目名称')),
                ('projectType', models.CharField(max_length=20, verbose_name='项目类型')),
                ('projectStage', models.CharField(max_length=20, verbose_name='项目阶段')),
                ('projectHost', models.CharField(blank=True, max_length=30, verbose_name='项目业主')),
                ('projectHostGroup', models.CharField(blank=True, max_length=50, verbose_name='项目业主集团')),
                ('projectDesign', models.CharField(max_length=50, verbose_name='设计单位')),
                ('projectDate', models.CharField(max_length=20, verbose_name='日期')),
                ('status', models.IntegerField()),
                ('check', models.IntegerField()),
            ],
            options={
                'verbose_name': '项目申请',
                'verbose_name_plural': '项目申请',
            },
        ),
        migrations.CreateModel(
            name='projectOverview',
            fields=[
                ('projectNo', models.IntegerField(primary_key=True, serialize=False, verbose_name='项目序号')),
                ('projectName', models.CharField(max_length=100, verbose_name='项目名称')),
                ('projectType', models.CharField(max_length=20, verbose_name='项目类型')),
                ('projectStage', models.CharField(max_length=20, verbose_name='项目阶段')),
                ('projectHost', models.CharField(blank=True, max_length=30, null=True, verbose_name='项目业主')),
                ('projectHostGroup', models.CharField(blank=True, max_length=50, null=True, verbose_name='项目业主集团')),
                ('projectDesign', models.CharField(max_length=50, verbose_name='设计单位')),
                ('projectDate', models.CharField(max_length=20, verbose_name='日期')),
            ],
            options={
                'verbose_name': '项目概况',
                'verbose_name_plural': '项目概况',
            },
        ),
        migrations.CreateModel(
            name='PVSystem',
            fields=[
                ('projectNo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='web.projectoverview', verbose_name='项目序号')),
                ('component', models.IntegerField(blank=True, null=True, verbose_name='组件')),
                ('installedAngle', models.IntegerField(blank=True, null=True, verbose_name='固定安装倾角')),
                ('plan', models.IntegerField(blank=True, null=True, verbose_name='组串方案')),
                ('inverter', models.IntegerField(blank=True, null=True, verbose_name='逆变器')),
                ('capacityRatio', models.FloatField(blank=True, null=True, verbose_name='组件与逆变器容配比')),
                ('inclinedRadiation', models.FloatField(blank=True, null=True, verbose_name='倾斜面辐射量')),
                ('systemEffience', models.FloatField(blank=True, null=True, verbose_name='系统效率')),
                ('avgElectricity', models.FloatField(blank=True, null=True, verbose_name='25年均上网电量')),
                ('avgHours', models.FloatField(blank=True, null=True, verbose_name='25年均小时数')),
                ('firstYearHours', models.FloatField(blank=True, null=True, verbose_name='首年利用小时数')),
                ('firstConnect', models.CharField(blank=True, max_length=20, null=True, verbose_name='首次并网')),
                ('fullConnect', models.CharField(blank=True, max_length=20, null=True, verbose_name='全容量并网')),
            ],
            options={
                'verbose_name': '光伏发电系统及发电量',
                'verbose_name_plural': '光伏发电系统及发电量',
            },
        ),
        migrations.CreateModel(
            name='siteProfile',
            fields=[
                ('projectNo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='web.projectoverview', verbose_name='项目序号')),
                ('location', models.CharField(max_length=50, verbose_name='项目地址')),
                ('capacity', models.FloatField(verbose_name='安装容量')),
                ('area', models.FloatField(blank=True, null=True, verbose_name='用地面积')),
                ('altitude', models.IntegerField(verbose_name='海拔高度')),
                ('longtitude', models.CharField(max_length=50, verbose_name='经度')),
                ('latitude', models.CharField(max_length=50, verbose_name='纬度')),
                ('radiationMJ', models.FloatField(verbose_name='水平太阳总辐射MJ')),
                ('radiationkwh', models.FloatField(verbose_name='水平太阳总辐射kwh')),
                ('dipAngle', models.IntegerField(verbose_name='最佳辐射量倾角')),
            ],
            options={
                'verbose_name': '场址概况',
                'verbose_name_plural': '场址概况',
            },
        ),
        migrations.CreateModel(
            name='temperature',
            fields=[
                ('projectNo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='web.projectoverview', verbose_name='项目序号')),
                ('avgTemperature', models.FloatField(verbose_name='多年平均气温')),
                ('maxTemperature', models.FloatField(verbose_name='多年极端最高气温')),
                ('minTemperature', models.FloatField(verbose_name='多年极端最低气温')),
                ('avgMonthTemperature', models.FloatField(blank=True, null=True, verbose_name='最热月平均气温')),
                ('breakingGroundDepth', models.FloatField(blank=True, null=True, verbose_name='多年最大冻土深度')),
                ('avgSpeed', models.FloatField(blank=True, null=True, verbose_name='多年平均风速')),
                ('maxSpeed', models.FloatField(blank=True, null=True, verbose_name='多年最大风速')),
                ('rainyDays', models.FloatField(blank=True, null=True, verbose_name='多年平均雷暴日数')),
                ('pollutionLevel', models.FloatField(blank=True, null=True, verbose_name='污秽等级')),
            ],
            options={
                'verbose_name': '主要气象特征要素',
                'verbose_name_plural': '主要气象特征要素',
            },
        ),
    ]
